---
image: docker:stable

variables:
  DOCKER_TLS_CERTDIR: "/certs"

  ADDON_GITHUB_REPO: "hassio-addons/addon-example"
  ADDON_SLUG: "example"
  ADDON_TARGET: "example"

  ADDON_AARCH64: "true"
  ADDON_AMD64: "true"
  ADDON_ARMHF: "true"
  ADDON_ARMV7: "true"
  ADDON_I386: "true"

  ADDON_AARCH64_BASE: "hassioaddons/base-aarch64:latest"
  ADDON_AMD64_BASE: "hassioaddons/base-amd64:latest"
  ADDON_ARMHF_BASE: "hassioaddons/base-armhf:latest"
  ADDON_ARMV7_BASE: "hassioaddons/base-armv7:latest"
  ADDON_I386_BASE: "hassioaddons/base-i386:latest"

  ADDON_AARCH64_VARIANT: "v8"
  ADDON_ARMHF_VARIANT: "v6"
  ADDON_ARMV7_VARIANT: "v7"

  ADDON_QEMU: "false"

  ADDON_PUBLISH: "true"
  ADDONS_REPO_STABLE: "hassio-addons/repository"
  ADDONS_REPO_BETA: "hassio-addons/repository-beta"
  ADDONS_REPO_EDGE: "hassio-addons/repository-edge"

  PREFLIGHT_HADOLINT: "true"
  PREFLIGHT_JSONLINT: "true"
  PREFLIGHT_MARKDOWNLINT: "true"
  PREFLIGHT_SHELLCHECK: "true"
  PREFLIGHT_YAMLLINT: "true"

  DOCKER_DRIVER: overlay2
  DOCKER_HUB_ORG: hassioaddons

stages:
  - preflight
  - build
  - deploy
  - manifest
  - publish

# Generic DIND template
.dind: &dind
  before_script:
    - echo dind
  services:
    - name: docker:stable-dind
      command: ["--experimental"]

# Generic preflight template
.preflight: &preflight
  stage: preflight
  tags:
    - preflight

# Generic build template
.build: &build
  <<: *dind
  stage: build
  before_script:
  script:
    - echo Build

# Generic deploy template
.deploy: &deploy
  <<: *dind
  stage: deploy
  before_script:
  script:
    - echo Deploy
  tags:
    - deploy

# Generic manifest template
.manifest: &manifest
  <<: *dind
  stage: manifest
  before_script:
  script:
    - echo Manifest
  tags:
    - manifest
  except:
    - /^(?!master).+@/

# Generic publish template
.publish: &publish
  stage: publish
  image:
    name: hassioaddons/repository-updater:latest
    entrypoint: [""]
  script:
    - echo Publish
  tags:
    - publish
  except:
    - /^(?!master).+@/

# Preflight jobs
hadolint:
  <<: *preflight
  image: pipelinecomponents/hadolint:latest
  before_script:
    - hadolint --version
  script:
    - hadolint "${ADDON_TARGET}/Dockerfile"
  only:
    variables:
      - $PREFLIGHT_HADOLINT == "true"

shellcheck:
  <<: *preflight
  image: pipelinecomponents/shellcheck:latest
  before_script:
    - shellcheck --version
    - apk --no-cache add grep
    - |
      find . -type f -print0 | \
        xargs -0 sed -i 's:#!/usr/bin/with-contenv bash:#!/bin/bash:g'
  script:
    - |
      for file in $(grep -IRl "#\!\(/usr/bin/env \|/bin/\)" --exclude-dir ".git" "${ADDON_TARGET}"); do
        if ! shellcheck --external-sources $file; then
          export FAILED=1
        else
          echo "$file OK"
        fi
      done
      if [ "${FAILED}" = "1" ]; then
        exit 1
      fi
  only:
    variables:
      - $PREFLIGHT_SHELLCHECK == "true"

yamllint:
  <<: *preflight
  image: pipelinecomponents/yamllint:latest
  before_script:
    - yamllint --version
  script:
    - yamllint .
  only:
    variables:
      - $PREFLIGHT_YAMLLINT == "true"

jsonlint:
  <<: *preflight
  image: pipelinecomponents/jsonlint:latest
  before_script:
    - jsonlint --version || true
  script:
    - |
      for file in $(find . -type f -name "*.json"); do
        if ! jsonlint -q $file; then
          export FAILED=1
        else
          echo "$file OK"
        fi
      done
      if [ "${FAILED}" = "1" ]; then
        exit 1
      fi
  only:
    variables:
      - $PREFLIGHT_JSONLINT == "true"

markdownlint:
  <<: *preflight
  image: pipelinecomponents/markdownlint:latest
  before_script:
    - mdl --version
  script:
    - mdl --style all --warnings .
  only:
    variables:
      - $PREFLIGHT_MARKDOWNLINT == "true"

# Build Jobs
build:armhf:
  <<: *build
  variables:
    ADDON_ARCH: armhf
    FROM: "${ADDON_ARMHF_BASE}"
  only:
    variables:
      - $ADDON_ARMHF == "true"
  tags:
    - build
    - armhf

build:armv7:
  <<: *build
  variables:
    ADDON_ARCH: armv7
    FROM: "${ADDON_ARMV7_BASE}"
  only:
    variables:
      - $ADDON_ARMV7 == "true"
  tags:
    - build
    - armv7

build:aarch64:
  <<: *build
  variables:
    ADDON_ARCH: aarch64
    FROM: "${ADDON_AARCH64_BASE}"
  only:
    variables:
      - $ADDON_AARCH64 == "true"
  tags:
    - build
    - aarch64

build:i386:
  <<: *build
  variables:
    ADDON_ARCH: i386
    FROM: "${ADDON_I386_BASE}"
  only:
    variables:
      - $ADDON_I386 == "true"
  tags:
    - build
    - i386

build:amd64:
  <<: *build
  variables:
    ADDON_ARCH: amd64
    FROM: "${ADDON_AMD64_BASE}"
  only:
    variables:
      - $ADDON_AMD64 == "true"
  tags:
    - build
    - amd64

# Deploy jobs
deploy:armhf:
  <<: *deploy
  variables:
    ADDON_ARCH: armhf
  only:
    refs:
      - master
      - /^v\d+\.\d+\.\d+(?:-(?:beta|rc)(?:(?:(?:\+|\.)?[a-zA-Z0-9]+)*)?)?$/
    variables:
      - $ADDON_ARMHF == "true"
  except:
    - /^(?!master).+@/

deploy:armv7:
  <<: *deploy
  variables:
    ADDON_ARCH: armv7
  only:
    refs:
      - master
      - /^v\d+\.\d+\.\d+(?:-(?:beta|rc)(?:(?:(?:\+|\.)?[a-zA-Z0-9]+)*)?)?$/
    variables:
      - $ADDON_ARMV7 == "true"
  except:
    - /^(?!master).+@/

deploy:aarch64:
  <<: *deploy
  variables:
    ADDON_ARCH: aarch64
  only:
    refs:
      - master
      - /^v\d+\.\d+\.\d+(?:-(?:beta|rc)(?:(?:(?:\+|\.)?[a-zA-Z0-9]+)*)?)?$/
    variables:
      - $ADDON_AARCH64 == "true"
  except:
    - /^(?!master).+@/

deploy:i386:
  <<: *deploy
  variables:
    ADDON_ARCH: i386
  only:
    refs:
      - master
      - /^v\d+\.\d+\.\d+(?:-(?:beta|rc)(?:(?:(?:\+|\.)?[a-zA-Z0-9]+)*)?)?$/
    variables:
      - $ADDON_I386 == "true"
  except:
    - /^(?!master).+@/

deploy:amd64:
  <<: *deploy
  variables:
    ADDON_ARCH: amd64
  only:
    refs:
      - master
      - /^v\d+\.\d+\.\d+(?:-(?:beta|rc)(?:(?:(?:\+|\.)?[a-zA-Z0-9]+)*)?)?$/
    variables:
      - $ADDON_AMD64 == "true"
  except:
    - /^(?!master).+@/

# Manifest jobs
manifest:sha:
  <<: *manifest
  only:
    - master

manifest:version:
  <<: *manifest
  variables:
    TAG: "${CI_COMMIT_TAG}"
  only:
    - /^v\d+\.\d+\.\d+(?:-(?:beta|rc)(?:(?:(?:\+|\.)?[a-zA-Z0-9]+)*)?)?$/

manifest:stable:
  <<: *manifest
  variables:
    TAG: latest
  only:
    - /^v\d+\.\d+\.\d+(?:(?:(?:\+|\.)?[a-zA-Z0-9]+)*)?$/

manifest:beta:
  <<: *manifest
  variables:
    TAG: beta
  only:
    - /^v\d+\.\d+\.\d+(?:-(?:beta|rc)(?:(?:(?:\+|\.)?[a-zA-Z0-9]+)*)?)?$/

manifest:edge:
  <<: *manifest
  variables:
    TAG: edge
  only:
    - master

# Publish jobs
publish:stable:
  <<: *publish
  variables:
    REPOSITORY: "${ADDONS_REPO_STABLE}"
  only:
    refs:
      - /^v\d+\.\d+\.\d+(?:(?:(?:\+|\.)?[a-zA-Z0-9]+)*)?$/
    variables:
      - $ADDON_PUBLISH == "true"
  environment:
    name: stable

publish:beta:
  <<: *publish
  variables:
    REPOSITORY: "${ADDONS_REPO_BETA}"
  only:
    refs:
      - /^v\d+\.\d+\.\d+(?:-(?:beta|rc)(?:(?:(?:\+|\.)?[a-zA-Z0-9]+)*)?)?$/
    variables:
      - $ADDON_PUBLISH == "true"
  environment:
    name: beta

publish:edge:
  <<: *publish
  variables:
    REPOSITORY: "${ADDONS_REPO_EDGE}"
  only:
    refs:
      - master
    variables:
      - $ADDON_PUBLISH == "true"
  environment:
    name: edge

